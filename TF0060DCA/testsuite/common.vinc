`define SIZ_LONG 2'b00
`define SIZ_WORD 2'b10
`define SIZ_BYTE 2'b01
`define SIZ_LINE 2'b11

reg [2:0] _TM = 3'b101;
reg [1:0] _TT = 2'b00;

task tick;
begin 

    @(negedge CLK);
    while (CLKEN) @(negedge CLK);
    @(posedge CLK);
    #1;
end
endtask


task reset_cmd;
begin 
    RESET <= 1'b0;
    #100;

    RESET <= 1'b1;

    #100;
end 
endtask

task write;
input [31:0] addr;
begin

    RW <= 1'b0;
    TS <= 1'b1;
    tick();
    TM <= 'b101; TT <= 'b00;
    AA <= addr;
    TS <= 1'b0;
    TIP <= 1'b0;
    tick();
    TS <= 1'b1;
    wait(~TA); #1; wait(~CLK); #5; 
    TIP <= 1'b1;
end
endtask 

task read;
input [31:0] addr; 
begin
    
    RW <= 1'b1;
    TS <= 1'b1;
    tick(); #1
    TM <= _TM; TT <= _TT;
    AA <= addr;
    TS <= 1'b0;
    TIP <= 1'b0;
    tick();
    TS <= 1'b1;
    wait(~TA); #1; wait(~CLK); #5; 
    TIP <= 1'b1;

end
endtask 

task read16;
input [31:0] addr;
begin 
    SIZ60 = 2'b11;
    RW <= 1'b1;
    TS <= 1'b1;
    wait(~CLK); #5; wait(CLK) #5;
    TM <= _TM; TT <= _TT;
    AA <= addr;
    TS <= 1'b0;
    TIP <= 1'b0;
    wait(~CLK); #5; wait(CLK) #5;  wait(CLK) #5;
    TS <= 1'b1;
    wait(~TA); #1; wait(~CLK); #5;  wait(CLK) #5;

    wait(~TA); #1; wait(~CLK); #5;  wait(CLK) #5;

    wait(~TA); #1; wait(~CLK); #5;  wait(CLK) #5;

    wait(~TA); #1; wait(~CLK); #5;  

    TIP <= 1'b1;

end
endtask 

task write16;
input [31:0] addr;
input [31:0] data; 
begin 
    SIZ60 = 2'b11;
    RW <= 1'b0;
    CPU_DD <= data;
    TS <= 1'b1;
    wait(~CLK); #5; wait(CLK) #5;
    TM <= _TM; TT <= _TT;
    AA <= addr;
    TS <= 1'b0;
    TIP <= 1'b0;
    wait(~CLK); #5; wait(CLK) #5;  wait(CLK) #5;
    TS <= 1'b1;
    wait(~TA); #1; wait(~CLK); #5;  wait(CLK) #5;

    wait(~TA); #1; wait(~CLK); #5;  wait(CLK) #5;

    wait(~TA); #1; wait(~CLK); #5;  wait(CLK) #5;

    wait(~TA); #1; wait(~CLK);  

    TIP <= 1'b1;

end
endtask 

task writeb;
input [31:0] addr; 
input [31:0] data;
begin
    CPU_DD <= data;
    SIZ60 <= `SIZ_BYTE;
    write(addr);
end
endtask

task readw;
input [31:0] addr; 
begin
    SIZ60 <= `SIZ_WORD;
    read(addr);
end
endtask

task writew;
input [31:0] addr; 
input [31:0] data;
begin
    CPU_DD <= data;
    SIZ60 <= `SIZ_WORD;
    write(addr);
end
endtask

task writel;
input [31:0] addr; 
input [31:0] data;
begin
    CPU_DD <= data;
    SIZ60 <= `SIZ_LONG;
    write(addr);
end
endtask

task readb;
input [31:0] addr; 
begin
    
    SIZ60 <= `SIZ_BYTE;
    read(addr);

end
endtask

task readl;
input [31:0] addr; 
begin
    
    SIZ60 <= `SIZ_LONG;
    read(addr);

end
endtask

task readline;
input [31:0] addr; 
begin
    
    SIZ60 <= `SIZ_LINE;
    read(addr);

end
endtask

task iack;
input [2:0] level; 
begin
    
    RW <= 1'b1;
    TS <= 1'b1;
    TIP <= 1'b1;
    tick();
    TM <= ~level; TT <= 'b11;
    TS <= 1'b0;
    TIP <= 1'b0;
    SIZ60 <= `SIZ_BYTE;
    AA <= 32'hFFFF_FFFF;
    tick();
    TS <= 1'b1;
    wait(~TA); #1; wait(TA); #1; 
    tick();;
    tick();
    SIZ60 <= 2'b11;

end
endtask

task busidle;
begin


end
endtask
